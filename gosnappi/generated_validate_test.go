package gosnappi_test

import (
	"testing"

	gosnappi "github.com/open-traffic-generator/snappi/gosnappi"
	"github.com/stretchr/testify/assert"
)

func TestConfigGeneratedValidate(t *testing.T) {
	api := gosnappi.NewApi()
	config := api.NewConfig()

	v1 := config.Ports().Add()
	v1.Validate()
	v2 := config.Lags().Add()
	v3 := v2.Ports().Add()
	v4 := v3.Protocol()
	v5 := v4.Lacp()
	v5.SetActorKey(-1).SetActorPortNumber(-1).SetActorPortPriority(-1).SetActorSystemId("00:00:00:00:00:0a::0b").SetActorSystemPriority(-1).SetLacpduPeriodicTimeInterval(-1).SetLacpduTimeout(-1)
	assert.NotNil(t, v5.Validate())
	v6 := v4.Static()
	v6.SetLagId(-1)
	assert.NotNil(t, v6.Validate())
	v4.Validate()
	v7 := v3.Ethernet()
	v7.SetMac("00:00:00:00:00:0a::0b").SetMtu(-1)
	v8 := v7.Vlans().Add()
	v8.SetPriority(-1).SetId(-1)
	assert.NotNil(t, v8.Validate())
	assert.NotNil(t, v7.Validate())
	v3.Validate()
	v2.Validate()
	v9 := config.Layer1().Add()
	v9.SetMtu(63)
	v10 := v9.AutoNegotiation()
	v10.Validate()
	v11 := v9.FlowControl()
	v11.SetDirectedAddress("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v11.Validate())
	assert.NotNil(t, v9.Validate())
	v12 := config.Captures().Add()
	v13 := v12.Filters().Add()
	v14 := v13.Custom()
	v14.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v14.Validate())
	v15 := v13.Ethernet()
	v16 := v15.Src()
	v16.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v16.Validate())
	v17 := v15.Dst()
	v17.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v17.Validate())
	v18 := v15.EtherType()
	v18.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v18.Validate())
	v19 := v15.PfcQueue()
	v19.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v19.Validate())
	v15.Validate()
	v20 := v13.Vlan()
	v21 := v20.Priority()
	v21.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v21.Validate())
	v22 := v20.Cfi()
	v22.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v22.Validate())
	v23 := v20.Id()
	v23.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v23.Validate())
	v24 := v20.Protocol()
	v24.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v24.Validate())
	v20.Validate()
	v25 := v13.Ipv4()
	v26 := v25.Version()
	v26.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v26.Validate())
	v27 := v25.HeaderLength()
	v27.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v27.Validate())
	v28 := v25.Priority()
	v28.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v28.Validate())
	v29 := v25.TotalLength()
	v29.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v29.Validate())
	v30 := v25.Identification()
	v30.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v30.Validate())
	v31 := v25.Reserved()
	v31.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v31.Validate())
	v32 := v25.DontFragment()
	v32.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v32.Validate())
	v33 := v25.MoreFragments()
	v33.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v33.Validate())
	v34 := v25.FragmentOffset()
	v34.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v34.Validate())
	v35 := v25.TimeToLive()
	v35.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v35.Validate())
	v36 := v25.Protocol()
	v36.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v36.Validate())
	v37 := v25.HeaderChecksum()
	v37.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v37.Validate())
	v38 := v25.Src()
	v38.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v38.Validate())
	v39 := v25.Dst()
	v39.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v39.Validate())
	v25.Validate()
	v40 := v13.Ipv6()
	v41 := v40.Version()
	v41.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v41.Validate())
	v42 := v40.TrafficClass()
	v42.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v42.Validate())
	v43 := v40.FlowLabel()
	v43.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v43.Validate())
	v44 := v40.PayloadLength()
	v44.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v44.Validate())
	v45 := v40.NextHeader()
	v45.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v45.Validate())
	v46 := v40.HopLimit()
	v46.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v46.Validate())
	v47 := v40.Src()
	v47.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v47.Validate())
	v48 := v40.Dst()
	v48.SetValue("0x12JKL").SetMask("0x12JKL")
	assert.NotNil(t, v48.Validate())
	v40.Validate()
	v13.Validate()
	v12.Validate()
	v49 := config.Devices().Add()
	v50 := v49.Ethernets().Add()
	v50.SetMac("00:00:00:00:00:0a::0b").SetMtu(-1)
	v51 := v50.Ipv4Addresses().Add()
	v51.SetGateway("1.1.1.1.1").SetAddress("1.1.1.1.1").SetPrefix(-1)
	assert.NotNil(t, v51.Validate())
	v52 := v50.Ipv6Addresses().Add()
	v52.SetGateway("2000::1::1").SetAddress("2000::1::1").SetPrefix(-1)
	assert.NotNil(t, v52.Validate())
	v53 := v50.Vlans().Add()
	v53.SetPriority(-1).SetId(-1)
	assert.NotNil(t, v53.Validate())
	assert.NotNil(t, v50.Validate())
	v54 := v49.Ipv4Loopbacks().Add()
	v54.SetAddress("1.1.1.1.1")
	assert.NotNil(t, v54.Validate())
	v55 := v49.Ipv6Loopbacks().Add()
	v55.SetAddress("2000::1::1")
	assert.NotNil(t, v55.Validate())
	v56 := v49.Isis()
	v56.SetSystemId("0x12JKL")
	v57 := v56.Instance()
	v57.SetIid(-1)
	assert.NotNil(t, v57.Validate())
	v58 := v56.Interfaces().Add()
	v59 := v58.L1Settings()
	v59.Validate()
	v60 := v58.L2Settings()
	v60.Validate()
	v61 := v58.MultiTopologyIds().Add()
	v61.SetMtId(-1).SetLinkMetric(-1)
	assert.NotNil(t, v61.Validate())
	v62 := v58.TrafficEngineering().Add()
	v62.SetAdministrativeGroup("0x12JKL").SetMetricLevel(-1).SetMaxBandwith(-1).SetMaxReservableBandwidth(-1)
	v63 := v62.PriorityBandwidths()
	v63.SetPb0(-1).SetPb1(-1).SetPb2(-1).SetPb3(-1).SetPb4(-1).SetPb5(-1).SetPb6(-1).SetPb7(-1)
	assert.NotNil(t, v63.Validate())
	assert.NotNil(t, v62.Validate())
	v64 := v58.Authentication()
	v64.Validate()
	v65 := v58.Advanced()
	v65.Validate()
	v66 := v58.LinkProtection()
	v66.Validate()
	v58.Validate()
	v67 := v56.Basic()
	v67.SetIpv4TeRouterId("1.1.1.1.1")
	assert.NotNil(t, v67.Validate())
	v68 := v56.Advanced()
	v68.SetMaxAreaAddresses(-1).SetAreaAddresses([]string{"0x12HKLJ"}).SetLspRefreshRate(-1).SetLspLifetime(-1).SetPsnpInterval(-1).SetCsnpInterval(-1).SetMaxLspSize(63).SetLspMgroupMinTransInterval(-1)
	assert.NotNil(t, v68.Validate())
	v69 := v56.RouterAuth()
	v70 := v69.AreaAuth()
	v70.Validate()
	v71 := v69.DomainAuth()
	v71.Validate()
	v69.Validate()
	v72 := v56.V4Routes().Add()
	v72.SetLinkMetric(-1)
	v73 := v72.Addresses().Add()
	v73.SetAddress("1.1.1.1.1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v73.Validate())
	assert.NotNil(t, v72.Validate())
	v74 := v56.V6Routes().Add()
	v74.SetLinkMetric(-1)
	v75 := v74.Addresses().Add()
	v75.SetAddress("2000::1::1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v75.Validate())
	assert.NotNil(t, v74.Validate())
	assert.NotNil(t, v56.Validate())
	v76 := v49.Bgp()
	v76.SetRouterId("1.1.1.1.1")
	v77 := v76.Ipv4Interfaces().Add()
	v78 := v77.Peers().Add()
	v78.SetPeerAddress("1.1.1.1.1")
	v79 := v78.Advanced()
	v79.Validate()
	v80 := v78.Capability()
	v80.Validate()
	v81 := v78.V4Routes().Add()
	v81.SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v82 := v81.Addresses().Add()
	v82.SetAddress("1.1.1.1.1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v82.Validate())
	v83 := v81.Advanced()
	v83.Validate()
	v84 := v81.Communities().Add()
	v84.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v84.Validate())
	v85 := v81.AsPath()
	v86 := v85.Segments().Add()
	v86.Validate()
	v85.Validate()
	v87 := v81.AddPath()
	v87.Validate()
	assert.NotNil(t, v81.Validate())
	v88 := v78.V6Routes().Add()
	v88.SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v89 := v88.Addresses().Add()
	v89.SetAddress("2000::1::1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v89.Validate())
	v90 := v88.Advanced()
	v90.Validate()
	v91 := v88.Communities().Add()
	v91.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v91.Validate())
	v92 := v88.AsPath()
	v93 := v92.Segments().Add()
	v93.Validate()
	v92.Validate()
	v94 := v88.AddPath()
	v94.Validate()
	assert.NotNil(t, v88.Validate())
	v95 := v78.V4SrtePolicies().Add()
	v95.SetDistinguisher(-1).SetColor(-1).SetIpv4Endpoint("1.1.1.1.1").SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v96 := v95.Advanced()
	v96.Validate()
	v97 := v95.AddPath()
	v97.Validate()
	v98 := v95.AsPath()
	v99 := v98.Segments().Add()
	v99.Validate()
	v98.Validate()
	v100 := v95.Communities().Add()
	v100.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v100.Validate())
	v101 := v95.ExtCommunities().Add()
	v101.SetValue("0x12JKL")
	assert.NotNil(t, v101.Validate())
	v102 := v95.TunnelTlvs().Add()
	v103 := v102.RemoteEndpointSubTlv()
	v103.SetAsNumber(-1).SetIpv4Address("1.1.1.1.1").SetIpv6Address("2000::1::1")
	assert.NotNil(t, v103.Validate())
	v104 := v102.ColorSubTlv()
	v104.SetColor("0x12JKL")
	assert.NotNil(t, v104.Validate())
	v105 := v102.BindingSubTlv()
	v105.SetIpv6Sid("2000::1::1")
	assert.NotNil(t, v105.Validate())
	v106 := v102.PreferenceSubTlv()
	v106.SetPreference(-1)
	assert.NotNil(t, v106.Validate())
	v107 := v102.PolicyPrioritySubTlv()
	v107.SetPolicyPriority(-1)
	assert.NotNil(t, v107.Validate())
	v108 := v102.PolicyNameSubTlv()
	v108.Validate()
	v109 := v102.ExplicitNullLabelPolicySubTlv()
	v109.Validate()
	v110 := v102.SegmentLists().Add()
	v110.SetWeight(-1)
	v111 := v110.Segments().Add()
	v112 := v111.TypeA()
	v112.SetFlags("0x12JKL").SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v112.Validate())
	v113 := v111.TypeB()
	v113.SetFlags("0x12JKL").SetSrv6Sid("2000::1::1")
	v114 := v113.Srv6SidEndpointBehavior()
	v114.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v114.Validate())
	assert.NotNil(t, v113.Validate())
	v115 := v111.TypeC()
	v115.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v116 := v115.SrMplsSid()
	v116.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v116.Validate())
	assert.NotNil(t, v115.Validate())
	v117 := v111.TypeD()
	v117.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv6NodeAddress("2000::1::1")
	v118 := v117.SrMplsSid()
	v118.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v118.Validate())
	assert.NotNil(t, v117.Validate())
	v119 := v111.TypeE()
	v119.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v120 := v119.SrMplsSid()
	v120.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v120.Validate())
	assert.NotNil(t, v119.Validate())
	v121 := v111.TypeF()
	v121.SetFlags("0x12JKL").SetLocalIpv4Address("1.1.1.1.1").SetRemoteIpv4Address("1.1.1.1.1")
	v122 := v121.SrMplsSid()
	v122.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v122.Validate())
	assert.NotNil(t, v121.Validate())
	v123 := v111.TypeG()
	v123.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1")
	v124 := v123.SrMplsSid()
	v124.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v124.Validate())
	assert.NotNil(t, v123.Validate())
	v125 := v111.TypeH()
	v125.SetFlags("0x12JKL").SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1")
	v126 := v125.SrMplsSid()
	v126.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v126.Validate())
	assert.NotNil(t, v125.Validate())
	v127 := v111.TypeI()
	v127.SetFlags("0x12JKL").SetIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v128 := v127.Srv6SidEndpointBehavior()
	v128.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v128.Validate())
	assert.NotNil(t, v127.Validate())
	v129 := v111.TypeJ()
	v129.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v130 := v129.Srv6SidEndpointBehavior()
	v130.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v130.Validate())
	assert.NotNil(t, v129.Validate())
	v131 := v111.TypeK()
	v131.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1").SetSrv6Sid("2000::1::1")
	v132 := v131.Srv6SidEndpointBehavior()
	v132.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v132.Validate())
	assert.NotNil(t, v131.Validate())
	v111.Validate()
	assert.NotNil(t, v110.Validate())
	v102.Validate()
	assert.NotNil(t, v95.Validate())
	v133 := v78.V6SrtePolicies().Add()
	v133.SetDistinguisher(-1).SetColor(-1).SetIpv6Endpoint("2000::1::1").SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v134 := v133.Advanced()
	v134.Validate()
	v135 := v133.AddPath()
	v135.Validate()
	v136 := v133.AsPath()
	v137 := v136.Segments().Add()
	v137.Validate()
	v136.Validate()
	v138 := v133.Communities().Add()
	v138.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v138.Validate())
	v139 := v133.Extcommunities().Add()
	v139.SetValue("0x12JKL")
	assert.NotNil(t, v139.Validate())
	v140 := v133.TunnelTlvs().Add()
	v141 := v140.RemoteEndpointSubTlv()
	v141.SetAsNumber(-1).SetIpv4Address("1.1.1.1.1").SetIpv6Address("2000::1::1")
	assert.NotNil(t, v141.Validate())
	v142 := v140.ColorSubTlv()
	v142.SetColor("0x12JKL")
	assert.NotNil(t, v142.Validate())
	v143 := v140.BindingSubTlv()
	v143.SetIpv6Sid("2000::1::1")
	assert.NotNil(t, v143.Validate())
	v144 := v140.PreferenceSubTlv()
	v144.SetPreference(-1)
	assert.NotNil(t, v144.Validate())
	v145 := v140.PolicyPrioritySubTlv()
	v145.SetPolicyPriority(-1)
	assert.NotNil(t, v145.Validate())
	v146 := v140.PolicyNameSubTlv()
	v146.Validate()
	v147 := v140.ExplicitNullLabelPolicySubTlv()
	v147.Validate()
	v148 := v140.SegmentLists().Add()
	v148.SetWeight(-1)
	v149 := v148.Segments().Add()
	v150 := v149.TypeA()
	v150.SetFlags("0x12JKL").SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v150.Validate())
	v151 := v149.TypeB()
	v151.SetFlags("0x12JKL").SetSrv6Sid("2000::1::1")
	v152 := v151.Srv6SidEndpointBehavior()
	v152.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v152.Validate())
	assert.NotNil(t, v151.Validate())
	v153 := v149.TypeC()
	v153.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v154 := v153.SrMplsSid()
	v154.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v154.Validate())
	assert.NotNil(t, v153.Validate())
	v155 := v149.TypeD()
	v155.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv6NodeAddress("2000::1::1")
	v156 := v155.SrMplsSid()
	v156.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v156.Validate())
	assert.NotNil(t, v155.Validate())
	v157 := v149.TypeE()
	v157.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v158 := v157.SrMplsSid()
	v158.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v158.Validate())
	assert.NotNil(t, v157.Validate())
	v159 := v149.TypeF()
	v159.SetFlags("0x12JKL").SetLocalIpv4Address("1.1.1.1.1").SetRemoteIpv4Address("1.1.1.1.1")
	v160 := v159.SrMplsSid()
	v160.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v160.Validate())
	assert.NotNil(t, v159.Validate())
	v161 := v149.TypeG()
	v161.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1")
	v162 := v161.SrMplsSid()
	v162.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v162.Validate())
	assert.NotNil(t, v161.Validate())
	v163 := v149.TypeH()
	v163.SetFlags("0x12JKL").SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1")
	v164 := v163.SrMplsSid()
	v164.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v164.Validate())
	assert.NotNil(t, v163.Validate())
	v165 := v149.TypeI()
	v165.SetFlags("0x12JKL").SetIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v166 := v165.Srv6SidEndpointBehavior()
	v166.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v166.Validate())
	assert.NotNil(t, v165.Validate())
	v167 := v149.TypeJ()
	v167.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v168 := v167.Srv6SidEndpointBehavior()
	v168.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v168.Validate())
	assert.NotNil(t, v167.Validate())
	v169 := v149.TypeK()
	v169.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1").SetSrv6Sid("2000::1::1")
	v170 := v169.Srv6SidEndpointBehavior()
	v170.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v170.Validate())
	assert.NotNil(t, v169.Validate())
	v149.Validate()
	assert.NotNil(t, v148.Validate())
	v140.Validate()
	assert.NotNil(t, v133.Validate())
	assert.NotNil(t, v78.Validate())
	v77.Validate()
	v171 := v76.Ipv6Interfaces().Add()
	v172 := v171.Peers().Add()
	v172.SetPeerAddress("2000::1::1")
	v173 := v172.SegmentRouting()
	v173.Validate()
	v174 := v172.Advanced()
	v174.Validate()
	v175 := v172.Capability()
	v175.Validate()
	v176 := v172.V4Routes().Add()
	v176.SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v177 := v176.Addresses().Add()
	v177.SetAddress("1.1.1.1.1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v177.Validate())
	v178 := v176.Advanced()
	v178.Validate()
	v179 := v176.Communities().Add()
	v179.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v179.Validate())
	v180 := v176.AsPath()
	v181 := v180.Segments().Add()
	v181.Validate()
	v180.Validate()
	v182 := v176.AddPath()
	v182.Validate()
	assert.NotNil(t, v176.Validate())
	v183 := v172.V6Routes().Add()
	v183.SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v184 := v183.Addresses().Add()
	v184.SetAddress("2000::1::1").SetPrefix(-1).SetCount(-1).SetStep(-1)
	assert.NotNil(t, v184.Validate())
	v185 := v183.Advanced()
	v185.Validate()
	v186 := v183.Communities().Add()
	v186.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v186.Validate())
	v187 := v183.AsPath()
	v188 := v187.Segments().Add()
	v188.Validate()
	v187.Validate()
	v189 := v183.AddPath()
	v189.Validate()
	assert.NotNil(t, v183.Validate())
	v190 := v172.V4SrtePolicies().Add()
	v190.SetDistinguisher(-1).SetColor(-1).SetIpv4Endpoint("1.1.1.1.1").SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v191 := v190.Advanced()
	v191.Validate()
	v192 := v190.AddPath()
	v192.Validate()
	v193 := v190.AsPath()
	v194 := v193.Segments().Add()
	v194.Validate()
	v193.Validate()
	v195 := v190.Communities().Add()
	v195.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v195.Validate())
	v196 := v190.ExtCommunities().Add()
	v196.SetValue("0x12JKL")
	assert.NotNil(t, v196.Validate())
	v197 := v190.TunnelTlvs().Add()
	v198 := v197.RemoteEndpointSubTlv()
	v198.SetAsNumber(-1).SetIpv4Address("1.1.1.1.1").SetIpv6Address("2000::1::1")
	assert.NotNil(t, v198.Validate())
	v199 := v197.ColorSubTlv()
	v199.SetColor("0x12JKL")
	assert.NotNil(t, v199.Validate())
	v200 := v197.BindingSubTlv()
	v200.SetIpv6Sid("2000::1::1")
	assert.NotNil(t, v200.Validate())
	v201 := v197.PreferenceSubTlv()
	v201.SetPreference(-1)
	assert.NotNil(t, v201.Validate())
	v202 := v197.PolicyPrioritySubTlv()
	v202.SetPolicyPriority(-1)
	assert.NotNil(t, v202.Validate())
	v203 := v197.PolicyNameSubTlv()
	v203.Validate()
	v204 := v197.ExplicitNullLabelPolicySubTlv()
	v204.Validate()
	v205 := v197.SegmentLists().Add()
	v205.SetWeight(-1)
	v206 := v205.Segments().Add()
	v207 := v206.TypeA()
	v207.SetFlags("0x12JKL").SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v207.Validate())
	v208 := v206.TypeB()
	v208.SetFlags("0x12JKL").SetSrv6Sid("2000::1::1")
	v209 := v208.Srv6SidEndpointBehavior()
	v209.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v209.Validate())
	assert.NotNil(t, v208.Validate())
	v210 := v206.TypeC()
	v210.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v211 := v210.SrMplsSid()
	v211.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v211.Validate())
	assert.NotNil(t, v210.Validate())
	v212 := v206.TypeD()
	v212.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv6NodeAddress("2000::1::1")
	v213 := v212.SrMplsSid()
	v213.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v213.Validate())
	assert.NotNil(t, v212.Validate())
	v214 := v206.TypeE()
	v214.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v215 := v214.SrMplsSid()
	v215.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v215.Validate())
	assert.NotNil(t, v214.Validate())
	v216 := v206.TypeF()
	v216.SetFlags("0x12JKL").SetLocalIpv4Address("1.1.1.1.1").SetRemoteIpv4Address("1.1.1.1.1")
	v217 := v216.SrMplsSid()
	v217.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v217.Validate())
	assert.NotNil(t, v216.Validate())
	v218 := v206.TypeG()
	v218.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1")
	v219 := v218.SrMplsSid()
	v219.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v219.Validate())
	assert.NotNil(t, v218.Validate())
	v220 := v206.TypeH()
	v220.SetFlags("0x12JKL").SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1")
	v221 := v220.SrMplsSid()
	v221.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v221.Validate())
	assert.NotNil(t, v220.Validate())
	v222 := v206.TypeI()
	v222.SetFlags("0x12JKL").SetIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v223 := v222.Srv6SidEndpointBehavior()
	v223.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v223.Validate())
	assert.NotNil(t, v222.Validate())
	v224 := v206.TypeJ()
	v224.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v225 := v224.Srv6SidEndpointBehavior()
	v225.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v225.Validate())
	assert.NotNil(t, v224.Validate())
	v226 := v206.TypeK()
	v226.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1").SetSrv6Sid("2000::1::1")
	v227 := v226.Srv6SidEndpointBehavior()
	v227.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v227.Validate())
	assert.NotNil(t, v226.Validate())
	v206.Validate()
	assert.NotNil(t, v205.Validate())
	v197.Validate()
	assert.NotNil(t, v190.Validate())
	v228 := v172.V6SrtePolicies().Add()
	v228.SetDistinguisher(-1).SetColor(-1).SetIpv6Endpoint("2000::1::1").SetNextHopIpv4Address("1.1.1.1.1").SetNextHopIpv6Address("2000::1::1")
	v229 := v228.Advanced()
	v229.Validate()
	v230 := v228.AddPath()
	v230.Validate()
	v231 := v228.AsPath()
	v232 := v231.Segments().Add()
	v232.Validate()
	v231.Validate()
	v233 := v228.Communities().Add()
	v233.SetAsNumber(-1).SetAsCustom(-1)
	assert.NotNil(t, v233.Validate())
	v234 := v228.Extcommunities().Add()
	v234.SetValue("0x12JKL")
	assert.NotNil(t, v234.Validate())
	v235 := v228.TunnelTlvs().Add()
	v236 := v235.RemoteEndpointSubTlv()
	v236.SetAsNumber(-1).SetIpv4Address("1.1.1.1.1").SetIpv6Address("2000::1::1")
	assert.NotNil(t, v236.Validate())
	v237 := v235.ColorSubTlv()
	v237.SetColor("0x12JKL")
	assert.NotNil(t, v237.Validate())
	v238 := v235.BindingSubTlv()
	v238.SetIpv6Sid("2000::1::1")
	assert.NotNil(t, v238.Validate())
	v239 := v235.PreferenceSubTlv()
	v239.SetPreference(-1)
	assert.NotNil(t, v239.Validate())
	v240 := v235.PolicyPrioritySubTlv()
	v240.SetPolicyPriority(-1)
	assert.NotNil(t, v240.Validate())
	v241 := v235.PolicyNameSubTlv()
	v241.Validate()
	v242 := v235.ExplicitNullLabelPolicySubTlv()
	v242.Validate()
	v243 := v235.SegmentLists().Add()
	v243.SetWeight(-1)
	v244 := v243.Segments().Add()
	v245 := v244.TypeA()
	v245.SetFlags("0x12JKL").SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v245.Validate())
	v246 := v244.TypeB()
	v246.SetFlags("0x12JKL").SetSrv6Sid("2000::1::1")
	v247 := v246.Srv6SidEndpointBehavior()
	v247.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v247.Validate())
	assert.NotNil(t, v246.Validate())
	v248 := v244.TypeC()
	v248.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v249 := v248.SrMplsSid()
	v249.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v249.Validate())
	assert.NotNil(t, v248.Validate())
	v250 := v244.TypeD()
	v250.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetIpv6NodeAddress("2000::1::1")
	v251 := v250.SrMplsSid()
	v251.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v251.Validate())
	assert.NotNil(t, v250.Validate())
	v252 := v244.TypeE()
	v252.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetIpv4NodeAddress("1.1.1.1.1")
	v253 := v252.SrMplsSid()
	v253.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v253.Validate())
	assert.NotNil(t, v252.Validate())
	v254 := v244.TypeF()
	v254.SetFlags("0x12JKL").SetLocalIpv4Address("1.1.1.1.1").SetRemoteIpv4Address("1.1.1.1.1")
	v255 := v254.SrMplsSid()
	v255.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v255.Validate())
	assert.NotNil(t, v254.Validate())
	v256 := v244.TypeG()
	v256.SetFlags("0x12JKL").SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1")
	v257 := v256.SrMplsSid()
	v257.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v257.Validate())
	assert.NotNil(t, v256.Validate())
	v258 := v244.TypeH()
	v258.SetFlags("0x12JKL").SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1")
	v259 := v258.SrMplsSid()
	v259.SetLabel(-1).SetTc(-1).SetTtl(-1)
	assert.NotNil(t, v259.Validate())
	assert.NotNil(t, v258.Validate())
	v260 := v244.TypeI()
	v260.SetFlags("0x12JKL").SetIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v261 := v260.Srv6SidEndpointBehavior()
	v261.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v261.Validate())
	assert.NotNil(t, v260.Validate())
	v262 := v244.TypeJ()
	v262.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalInterfaceId(-1).SetLocalIpv6NodeAddress("2000::1::1").SetRemoteInterfaceId(-1).SetRemoteIpv6NodeAddress("2000::1::1").SetSrv6Sid("2000::1::1")
	v263 := v262.Srv6SidEndpointBehavior()
	v263.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v263.Validate())
	assert.NotNil(t, v262.Validate())
	v264 := v244.TypeK()
	v264.SetFlags("0x12JKL").SetSrAlgorithm(-1).SetLocalIpv6Address("2000::1::1").SetRemoteIpv6Address("2000::1::1").SetSrv6Sid("2000::1::1")
	v265 := v264.Srv6SidEndpointBehavior()
	v265.SetLbLength(-1).SetLnLength(-1).SetFuncLength(-1).SetArgLength(-1)
	assert.NotNil(t, v265.Validate())
	assert.NotNil(t, v264.Validate())
	v244.Validate()
	assert.NotNil(t, v243.Validate())
	v235.Validate()
	assert.NotNil(t, v228.Validate())
	assert.NotNil(t, v172.Validate())
	v171.Validate()
	assert.NotNil(t, v76.Validate())
	v49.Validate()
	v266 := config.Flows().Add()
	v267 := v266.TxRx()
	v268 := v267.Port()
	v268.Validate()
	v269 := v267.Device()
	v269.Validate()
	v267.Validate()
	v270 := v266.Packet().Add()
	v271 := v270.Custom()
	v271.Validate()
	v272 := v270.Ethernet()
	v273 := v272.Dst()
	v273.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v274 := v273.Increment()
	v274.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v274.Validate())
	v275 := v273.Decrement()
	v275.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v275.Validate())
	assert.NotNil(t, v273.Validate())
	v276 := v272.Src()
	v276.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v277 := v276.Increment()
	v277.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v277.Validate())
	v278 := v276.Decrement()
	v278.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v278.Validate())
	assert.NotNil(t, v276.Validate())
	v279 := v272.EtherType()
	v279.SetValue(-1).SetValues([]int32{-1})
	v280 := v279.Increment()
	v280.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v280.Validate())
	v281 := v279.Decrement()
	v281.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v281.Validate())
	assert.NotNil(t, v279.Validate())
	v282 := v272.PfcQueue()
	v282.SetValue(-1).SetValues([]int32{-1})
	v283 := v282.Increment()
	v283.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v283.Validate())
	v284 := v282.Decrement()
	v284.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v284.Validate())
	assert.NotNil(t, v282.Validate())
	v272.Validate()
	v285 := v270.Vlan()
	v286 := v285.Priority()
	v286.SetValue(-1).SetValues([]int32{-1})
	v287 := v286.Increment()
	v287.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v287.Validate())
	v288 := v286.Decrement()
	v288.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v288.Validate())
	assert.NotNil(t, v286.Validate())
	v289 := v285.Cfi()
	v289.SetValue(-1).SetValues([]int32{-1})
	v290 := v289.Increment()
	v290.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v290.Validate())
	v291 := v289.Decrement()
	v291.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v291.Validate())
	assert.NotNil(t, v289.Validate())
	v292 := v285.Id()
	v292.SetValue(-1).SetValues([]int32{-1})
	v293 := v292.Increment()
	v293.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v293.Validate())
	v294 := v292.Decrement()
	v294.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v294.Validate())
	assert.NotNil(t, v292.Validate())
	v295 := v285.Tpid()
	v295.SetValue(-1).SetValues([]int32{-1})
	v296 := v295.Increment()
	v296.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v296.Validate())
	v297 := v295.Decrement()
	v297.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v297.Validate())
	assert.NotNil(t, v295.Validate())
	v285.Validate()
	v298 := v270.Vxlan()
	v299 := v298.Flags()
	v299.SetValue(-1).SetValues([]int32{-1})
	v300 := v299.Increment()
	v300.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v300.Validate())
	v301 := v299.Decrement()
	v301.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v301.Validate())
	assert.NotNil(t, v299.Validate())
	v302 := v298.Reserved0()
	v302.SetValue(-1).SetValues([]int32{-1})
	v303 := v302.Increment()
	v303.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v303.Validate())
	v304 := v302.Decrement()
	v304.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v304.Validate())
	assert.NotNil(t, v302.Validate())
	v305 := v298.Vni()
	v305.SetValue(-1).SetValues([]int32{-1})
	v306 := v305.Increment()
	v306.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v306.Validate())
	v307 := v305.Decrement()
	v307.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v307.Validate())
	assert.NotNil(t, v305.Validate())
	v308 := v298.Reserved1()
	v308.SetValue(-1).SetValues([]int32{-1})
	v309 := v308.Increment()
	v309.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v309.Validate())
	v310 := v308.Decrement()
	v310.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v310.Validate())
	assert.NotNil(t, v308.Validate())
	v298.Validate()
	v311 := v270.Ipv4()
	v312 := v311.Version()
	v312.SetValue(-1).SetValues([]int32{-1})
	v313 := v312.Increment()
	v313.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v313.Validate())
	v314 := v312.Decrement()
	v314.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v314.Validate())
	assert.NotNil(t, v312.Validate())
	v315 := v311.HeaderLength()
	v315.SetValue(-1).SetValues([]int32{-1})
	v316 := v315.Increment()
	v316.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v316.Validate())
	v317 := v315.Decrement()
	v317.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v317.Validate())
	assert.NotNil(t, v315.Validate())
	v318 := v311.Priority()
	v319 := v318.Raw()
	v319.SetValue(-1).SetValues([]int32{-1})
	v320 := v319.Increment()
	v320.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v320.Validate())
	v321 := v319.Decrement()
	v321.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v321.Validate())
	assert.NotNil(t, v319.Validate())
	v322 := v318.Tos()
	v323 := v322.Precedence()
	v323.SetValue(-1).SetValues([]int32{-1})
	v324 := v323.Increment()
	v324.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v324.Validate())
	v325 := v323.Decrement()
	v325.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v325.Validate())
	assert.NotNil(t, v323.Validate())
	v326 := v322.Delay()
	v326.SetValue(-1).SetValues([]int32{-1})
	v327 := v326.Increment()
	v327.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v327.Validate())
	v328 := v326.Decrement()
	v328.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v328.Validate())
	assert.NotNil(t, v326.Validate())
	v329 := v322.Throughput()
	v329.SetValue(-1).SetValues([]int32{-1})
	v330 := v329.Increment()
	v330.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v330.Validate())
	v331 := v329.Decrement()
	v331.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v331.Validate())
	assert.NotNil(t, v329.Validate())
	v332 := v322.Reliability()
	v332.SetValue(-1).SetValues([]int32{-1})
	v333 := v332.Increment()
	v333.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v333.Validate())
	v334 := v332.Decrement()
	v334.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v334.Validate())
	assert.NotNil(t, v332.Validate())
	v335 := v322.Monetary()
	v335.SetValue(-1).SetValues([]int32{-1})
	v336 := v335.Increment()
	v336.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v336.Validate())
	v337 := v335.Decrement()
	v337.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v337.Validate())
	assert.NotNil(t, v335.Validate())
	v338 := v322.Unused()
	v338.SetValue(-1).SetValues([]int32{-1})
	v339 := v338.Increment()
	v339.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v339.Validate())
	v340 := v338.Decrement()
	v340.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v340.Validate())
	assert.NotNil(t, v338.Validate())
	v322.Validate()
	v341 := v318.Dscp()
	v342 := v341.Phb()
	v342.SetValue(-1).SetValues([]int32{-1})
	v343 := v342.Increment()
	v343.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v343.Validate())
	v344 := v342.Decrement()
	v344.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v344.Validate())
	assert.NotNil(t, v342.Validate())
	v345 := v341.Ecn()
	v345.SetValue(-1).SetValues([]int32{-1})
	v346 := v345.Increment()
	v346.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v346.Validate())
	v347 := v345.Decrement()
	v347.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v347.Validate())
	assert.NotNil(t, v345.Validate())
	v341.Validate()
	v318.Validate()
	v348 := v311.TotalLength()
	v348.SetValue(-1).SetValues([]int32{-1})
	v349 := v348.Increment()
	v349.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v349.Validate())
	v350 := v348.Decrement()
	v350.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v350.Validate())
	assert.NotNil(t, v348.Validate())
	v351 := v311.Identification()
	v351.SetValue(-1).SetValues([]int32{-1})
	v352 := v351.Increment()
	v352.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v352.Validate())
	v353 := v351.Decrement()
	v353.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v353.Validate())
	assert.NotNil(t, v351.Validate())
	v354 := v311.Reserved()
	v354.SetValue(-1).SetValues([]int32{-1})
	v355 := v354.Increment()
	v355.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v355.Validate())
	v356 := v354.Decrement()
	v356.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v356.Validate())
	assert.NotNil(t, v354.Validate())
	v357 := v311.DontFragment()
	v357.SetValue(-1).SetValues([]int32{-1})
	v358 := v357.Increment()
	v358.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v358.Validate())
	v359 := v357.Decrement()
	v359.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v359.Validate())
	assert.NotNil(t, v357.Validate())
	v360 := v311.MoreFragments()
	v360.SetValue(-1).SetValues([]int32{-1})
	v361 := v360.Increment()
	v361.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v361.Validate())
	v362 := v360.Decrement()
	v362.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v362.Validate())
	assert.NotNil(t, v360.Validate())
	v363 := v311.FragmentOffset()
	v363.SetValue(-1).SetValues([]int32{-1})
	v364 := v363.Increment()
	v364.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v364.Validate())
	v365 := v363.Decrement()
	v365.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v365.Validate())
	assert.NotNil(t, v363.Validate())
	v366 := v311.TimeToLive()
	v366.SetValue(-1).SetValues([]int32{-1})
	v367 := v366.Increment()
	v367.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v367.Validate())
	v368 := v366.Decrement()
	v368.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v368.Validate())
	assert.NotNil(t, v366.Validate())
	v369 := v311.Protocol()
	v369.SetValue(-1).SetValues([]int32{-1})
	v370 := v369.Increment()
	v370.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v370.Validate())
	v371 := v369.Decrement()
	v371.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v371.Validate())
	assert.NotNil(t, v369.Validate())
	v372 := v311.HeaderChecksum()
	v372.SetCustom(-1)
	assert.NotNil(t, v372.Validate())
	v373 := v311.Src()
	v373.SetValue("1.1.1.1.1").SetValues([]string{"1.1.1.1.1"})
	v374 := v373.Increment()
	v374.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v374.Validate())
	v375 := v373.Decrement()
	v375.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v375.Validate())
	assert.NotNil(t, v373.Validate())
	v376 := v311.Dst()
	v376.SetValue("1.1.1.1.1").SetValues([]string{"1.1.1.1.1"})
	v377 := v376.Increment()
	v377.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v377.Validate())
	v378 := v376.Decrement()
	v378.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v378.Validate())
	assert.NotNil(t, v376.Validate())
	v311.Validate()
	v379 := v270.Ipv6()
	v380 := v379.Version()
	v380.SetValue(-1).SetValues([]int32{-1})
	v381 := v380.Increment()
	v381.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v381.Validate())
	v382 := v380.Decrement()
	v382.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v382.Validate())
	assert.NotNil(t, v380.Validate())
	v383 := v379.TrafficClass()
	v383.SetValue(-1).SetValues([]int32{-1})
	v384 := v383.Increment()
	v384.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v384.Validate())
	v385 := v383.Decrement()
	v385.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v385.Validate())
	assert.NotNil(t, v383.Validate())
	v386 := v379.FlowLabel()
	v386.SetValue(-1).SetValues([]int32{-1})
	v387 := v386.Increment()
	v387.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v387.Validate())
	v388 := v386.Decrement()
	v388.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v388.Validate())
	assert.NotNil(t, v386.Validate())
	v389 := v379.PayloadLength()
	v389.SetValue(-1).SetValues([]int32{-1})
	v390 := v389.Increment()
	v390.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v390.Validate())
	v391 := v389.Decrement()
	v391.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v391.Validate())
	assert.NotNil(t, v389.Validate())
	v392 := v379.NextHeader()
	v392.SetValue(-1).SetValues([]int32{-1})
	v393 := v392.Increment()
	v393.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v393.Validate())
	v394 := v392.Decrement()
	v394.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v394.Validate())
	assert.NotNil(t, v392.Validate())
	v395 := v379.HopLimit()
	v395.SetValue(-1).SetValues([]int32{-1})
	v396 := v395.Increment()
	v396.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v396.Validate())
	v397 := v395.Decrement()
	v397.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v397.Validate())
	assert.NotNil(t, v395.Validate())
	v398 := v379.Src()
	v398.SetValue("2000::1::1").SetValues([]string{"2000::1::2"})
	v399 := v398.Increment()
	v399.SetStart("2000::1::1").SetStep("2000::1::1")
	assert.NotNil(t, v399.Validate())
	v400 := v398.Decrement()
	v400.SetStart("2000::1::1").SetStep("2000::1::1")
	assert.NotNil(t, v400.Validate())
	assert.NotNil(t, v398.Validate())
	v401 := v379.Dst()
	v401.SetValue("2000::1::1").SetValues([]string{"2000::1::2"})
	v402 := v401.Increment()
	v402.SetStart("2000::1::1").SetStep("2000::1::1")
	assert.NotNil(t, v402.Validate())
	v403 := v401.Decrement()
	v403.SetStart("2000::1::1").SetStep("2000::1::1")
	assert.NotNil(t, v403.Validate())
	assert.NotNil(t, v401.Validate())
	v379.Validate()
	v404 := v270.Pfcpause()
	v405 := v404.Dst()
	v405.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v406 := v405.Increment()
	v406.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v406.Validate())
	v407 := v405.Decrement()
	v407.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v407.Validate())
	assert.NotNil(t, v405.Validate())
	v408 := v404.Src()
	v408.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v409 := v408.Increment()
	v409.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v409.Validate())
	v410 := v408.Decrement()
	v410.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v410.Validate())
	assert.NotNil(t, v408.Validate())
	v411 := v404.EtherType()
	v411.SetValue(-1).SetValues([]int32{-1})
	v412 := v411.Increment()
	v412.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v412.Validate())
	v413 := v411.Decrement()
	v413.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v413.Validate())
	assert.NotNil(t, v411.Validate())
	v414 := v404.ControlOpCode()
	v414.SetValue(-1).SetValues([]int32{-1})
	v415 := v414.Increment()
	v415.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v415.Validate())
	v416 := v414.Decrement()
	v416.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v416.Validate())
	assert.NotNil(t, v414.Validate())
	v417 := v404.ClassEnableVector()
	v417.SetValue(-1).SetValues([]int32{-1})
	v418 := v417.Increment()
	v418.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v418.Validate())
	v419 := v417.Decrement()
	v419.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v419.Validate())
	assert.NotNil(t, v417.Validate())
	v420 := v404.PauseClass0()
	v420.SetValue(-1).SetValues([]int32{-1})
	v421 := v420.Increment()
	v421.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v421.Validate())
	v422 := v420.Decrement()
	v422.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v422.Validate())
	assert.NotNil(t, v420.Validate())
	v423 := v404.PauseClass1()
	v423.SetValue(-1).SetValues([]int32{-1})
	v424 := v423.Increment()
	v424.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v424.Validate())
	v425 := v423.Decrement()
	v425.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v425.Validate())
	assert.NotNil(t, v423.Validate())
	v426 := v404.PauseClass2()
	v426.SetValue(-1).SetValues([]int32{-1})
	v427 := v426.Increment()
	v427.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v427.Validate())
	v428 := v426.Decrement()
	v428.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v428.Validate())
	assert.NotNil(t, v426.Validate())
	v429 := v404.PauseClass3()
	v429.SetValue(-1).SetValues([]int32{-1})
	v430 := v429.Increment()
	v430.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v430.Validate())
	v431 := v429.Decrement()
	v431.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v431.Validate())
	assert.NotNil(t, v429.Validate())
	v432 := v404.PauseClass4()
	v432.SetValue(-1).SetValues([]int32{-1})
	v433 := v432.Increment()
	v433.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v433.Validate())
	v434 := v432.Decrement()
	v434.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v434.Validate())
	assert.NotNil(t, v432.Validate())
	v435 := v404.PauseClass5()
	v435.SetValue(-1).SetValues([]int32{-1})
	v436 := v435.Increment()
	v436.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v436.Validate())
	v437 := v435.Decrement()
	v437.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v437.Validate())
	assert.NotNil(t, v435.Validate())
	v438 := v404.PauseClass6()
	v438.SetValue(-1).SetValues([]int32{-1})
	v439 := v438.Increment()
	v439.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v439.Validate())
	v440 := v438.Decrement()
	v440.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v440.Validate())
	assert.NotNil(t, v438.Validate())
	v441 := v404.PauseClass7()
	v441.SetValue(-1).SetValues([]int32{-1})
	v442 := v441.Increment()
	v442.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v442.Validate())
	v443 := v441.Decrement()
	v443.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v443.Validate())
	assert.NotNil(t, v441.Validate())
	v404.Validate()
	v444 := v270.Ethernetpause()
	v445 := v444.Dst()
	v445.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v446 := v445.Increment()
	v446.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v446.Validate())
	v447 := v445.Decrement()
	v447.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v447.Validate())
	assert.NotNil(t, v445.Validate())
	v448 := v444.Src()
	v448.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v449 := v448.Increment()
	v449.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v449.Validate())
	v450 := v448.Decrement()
	v450.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v450.Validate())
	assert.NotNil(t, v448.Validate())
	v451 := v444.EtherType()
	v451.SetValue(-1).SetValues([]int32{-1})
	v452 := v451.Increment()
	v452.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v452.Validate())
	v453 := v451.Decrement()
	v453.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v453.Validate())
	assert.NotNil(t, v451.Validate())
	v454 := v444.ControlOpCode()
	v454.SetValue(-1).SetValues([]int32{-1})
	v455 := v454.Increment()
	v455.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v455.Validate())
	v456 := v454.Decrement()
	v456.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v456.Validate())
	assert.NotNil(t, v454.Validate())
	v457 := v444.Time()
	v457.SetValue(-1).SetValues([]int32{-1})
	v458 := v457.Increment()
	v458.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v458.Validate())
	v459 := v457.Decrement()
	v459.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v459.Validate())
	assert.NotNil(t, v457.Validate())
	v444.Validate()
	v460 := v270.Tcp()
	v461 := v460.SrcPort()
	v461.SetValue(-1).SetValues([]int32{-1})
	v462 := v461.Increment()
	v462.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v462.Validate())
	v463 := v461.Decrement()
	v463.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v463.Validate())
	assert.NotNil(t, v461.Validate())
	v464 := v460.DstPort()
	v464.SetValue(-1).SetValues([]int32{-1})
	v465 := v464.Increment()
	v465.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v465.Validate())
	v466 := v464.Decrement()
	v466.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v466.Validate())
	assert.NotNil(t, v464.Validate())
	v467 := v460.SeqNum()
	v467.SetValue(-1).SetValues([]int64{-1})
	v468 := v467.Increment()
	v468.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v468.Validate())
	v469 := v467.Decrement()
	v469.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v469.Validate())
	assert.NotNil(t, v467.Validate())
	v470 := v460.AckNum()
	v470.SetValue(-1).SetValues([]int64{-1})
	v471 := v470.Increment()
	v471.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v471.Validate())
	v472 := v470.Decrement()
	v472.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v472.Validate())
	assert.NotNil(t, v470.Validate())
	v473 := v460.DataOffset()
	v473.SetValue(-1).SetValues([]int32{-1})
	v474 := v473.Increment()
	v474.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v474.Validate())
	v475 := v473.Decrement()
	v475.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v475.Validate())
	assert.NotNil(t, v473.Validate())
	v476 := v460.EcnNs()
	v476.SetValue(-1).SetValues([]int32{-1})
	v477 := v476.Increment()
	v477.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v477.Validate())
	v478 := v476.Decrement()
	v478.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v478.Validate())
	assert.NotNil(t, v476.Validate())
	v479 := v460.EcnCwr()
	v479.SetValue(-1).SetValues([]int32{-1})
	v480 := v479.Increment()
	v480.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v480.Validate())
	v481 := v479.Decrement()
	v481.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v481.Validate())
	assert.NotNil(t, v479.Validate())
	v482 := v460.EcnEcho()
	v482.SetValue(-1).SetValues([]int32{-1})
	v483 := v482.Increment()
	v483.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v483.Validate())
	v484 := v482.Decrement()
	v484.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v484.Validate())
	assert.NotNil(t, v482.Validate())
	v485 := v460.CtlUrg()
	v485.SetValue(-1).SetValues([]int32{-1})
	v486 := v485.Increment()
	v486.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v486.Validate())
	v487 := v485.Decrement()
	v487.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v487.Validate())
	assert.NotNil(t, v485.Validate())
	v488 := v460.CtlAck()
	v488.SetValue(-1).SetValues([]int32{-1})
	v489 := v488.Increment()
	v489.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v489.Validate())
	v490 := v488.Decrement()
	v490.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v490.Validate())
	assert.NotNil(t, v488.Validate())
	v491 := v460.CtlPsh()
	v491.SetValue(-1).SetValues([]int32{-1})
	v492 := v491.Increment()
	v492.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v492.Validate())
	v493 := v491.Decrement()
	v493.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v493.Validate())
	assert.NotNil(t, v491.Validate())
	v494 := v460.CtlRst()
	v494.SetValue(-1).SetValues([]int32{-1})
	v495 := v494.Increment()
	v495.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v495.Validate())
	v496 := v494.Decrement()
	v496.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v496.Validate())
	assert.NotNil(t, v494.Validate())
	v497 := v460.CtlSyn()
	v497.SetValue(-1).SetValues([]int32{-1})
	v498 := v497.Increment()
	v498.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v498.Validate())
	v499 := v497.Decrement()
	v499.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v499.Validate())
	assert.NotNil(t, v497.Validate())
	v500 := v460.CtlFin()
	v500.SetValue(-1).SetValues([]int32{-1})
	v501 := v500.Increment()
	v501.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v501.Validate())
	v502 := v500.Decrement()
	v502.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v502.Validate())
	assert.NotNil(t, v500.Validate())
	v503 := v460.Window()
	v503.SetValue(-1).SetValues([]int32{-1})
	v504 := v503.Increment()
	v504.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v504.Validate())
	v505 := v503.Decrement()
	v505.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v505.Validate())
	assert.NotNil(t, v503.Validate())
	v460.Validate()
	v506 := v270.Udp()
	v507 := v506.SrcPort()
	v507.SetValue(-1).SetValues([]int32{-1})
	v508 := v507.Increment()
	v508.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v508.Validate())
	v509 := v507.Decrement()
	v509.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v509.Validate())
	assert.NotNil(t, v507.Validate())
	v510 := v506.DstPort()
	v510.SetValue(-1).SetValues([]int32{-1})
	v511 := v510.Increment()
	v511.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v511.Validate())
	v512 := v510.Decrement()
	v512.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v512.Validate())
	assert.NotNil(t, v510.Validate())
	v513 := v506.Length()
	v513.SetValue(-1).SetValues([]int32{-1})
	v514 := v513.Increment()
	v514.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v514.Validate())
	v515 := v513.Decrement()
	v515.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v515.Validate())
	assert.NotNil(t, v513.Validate())
	v516 := v506.Checksum()
	v516.SetCustom(-1)
	assert.NotNil(t, v516.Validate())
	v506.Validate()
	v517 := v270.Gre()
	v518 := v517.ChecksumPresent()
	v518.SetValue(-1).SetValues([]int32{-1})
	v519 := v518.Increment()
	v519.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v519.Validate())
	v520 := v518.Decrement()
	v520.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v520.Validate())
	assert.NotNil(t, v518.Validate())
	v521 := v517.Reserved0()
	v521.SetValue(-1).SetValues([]int32{-1})
	v522 := v521.Increment()
	v522.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v522.Validate())
	v523 := v521.Decrement()
	v523.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v523.Validate())
	assert.NotNil(t, v521.Validate())
	v524 := v517.Version()
	v524.SetValue(-1).SetValues([]int32{-1})
	v525 := v524.Increment()
	v525.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v525.Validate())
	v526 := v524.Decrement()
	v526.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v526.Validate())
	assert.NotNil(t, v524.Validate())
	v527 := v517.Protocol()
	v527.SetValue(-1).SetValues([]int32{-1})
	v528 := v527.Increment()
	v528.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v528.Validate())
	v529 := v527.Decrement()
	v529.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v529.Validate())
	assert.NotNil(t, v527.Validate())
	v530 := v517.Checksum()
	v530.SetCustom(-1)
	assert.NotNil(t, v530.Validate())
	v531 := v517.Reserved1()
	v531.SetValue(-1).SetValues([]int32{-1})
	v532 := v531.Increment()
	v532.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v532.Validate())
	v533 := v531.Decrement()
	v533.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v533.Validate())
	assert.NotNil(t, v531.Validate())
	v517.Validate()
	v534 := v270.Gtpv1()
	v535 := v534.Version()
	v535.SetValue(-1).SetValues([]int32{-1})
	v536 := v535.Increment()
	v536.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v536.Validate())
	v537 := v535.Decrement()
	v537.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v537.Validate())
	assert.NotNil(t, v535.Validate())
	v538 := v534.ProtocolType()
	v538.SetValue(-1).SetValues([]int32{-1})
	v539 := v538.Increment()
	v539.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v539.Validate())
	v540 := v538.Decrement()
	v540.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v540.Validate())
	assert.NotNil(t, v538.Validate())
	v541 := v534.Reserved()
	v541.SetValue(-1).SetValues([]int32{-1})
	v542 := v541.Increment()
	v542.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v542.Validate())
	v543 := v541.Decrement()
	v543.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v543.Validate())
	assert.NotNil(t, v541.Validate())
	v544 := v534.EFlag()
	v544.SetValue(-1).SetValues([]int32{-1})
	v545 := v544.Increment()
	v545.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v545.Validate())
	v546 := v544.Decrement()
	v546.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v546.Validate())
	assert.NotNil(t, v544.Validate())
	v547 := v534.SFlag()
	v547.SetValue(-1).SetValues([]int32{-1})
	v548 := v547.Increment()
	v548.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v548.Validate())
	v549 := v547.Decrement()
	v549.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v549.Validate())
	assert.NotNil(t, v547.Validate())
	v550 := v534.PnFlag()
	v550.SetValue(-1).SetValues([]int32{-1})
	v551 := v550.Increment()
	v551.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v551.Validate())
	v552 := v550.Decrement()
	v552.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v552.Validate())
	assert.NotNil(t, v550.Validate())
	v553 := v534.MessageType()
	v553.SetValue(-1).SetValues([]int32{-1})
	v554 := v553.Increment()
	v554.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v554.Validate())
	v555 := v553.Decrement()
	v555.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v555.Validate())
	assert.NotNil(t, v553.Validate())
	v556 := v534.MessageLength()
	v556.SetValue(-1).SetValues([]int32{-1})
	v557 := v556.Increment()
	v557.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v557.Validate())
	v558 := v556.Decrement()
	v558.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v558.Validate())
	assert.NotNil(t, v556.Validate())
	v559 := v534.Teid()
	v559.SetValue(-1).SetValues([]int64{-1})
	v560 := v559.Increment()
	v560.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v560.Validate())
	v561 := v559.Decrement()
	v561.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v561.Validate())
	assert.NotNil(t, v559.Validate())
	v562 := v534.SquenceNumber()
	v562.SetValue(-1).SetValues([]int32{-1})
	v563 := v562.Increment()
	v563.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v563.Validate())
	v564 := v562.Decrement()
	v564.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v564.Validate())
	assert.NotNil(t, v562.Validate())
	v565 := v534.NPduNumber()
	v565.SetValue(-1).SetValues([]int32{-1})
	v566 := v565.Increment()
	v566.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v566.Validate())
	v567 := v565.Decrement()
	v567.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v567.Validate())
	assert.NotNil(t, v565.Validate())
	v568 := v534.NextExtensionHeaderType()
	v568.SetValue(-1).SetValues([]int32{-1})
	v569 := v568.Increment()
	v569.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v569.Validate())
	v570 := v568.Decrement()
	v570.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v570.Validate())
	assert.NotNil(t, v568.Validate())
	v571 := v534.ExtensionHeaders().Add()
	v572 := v571.ExtensionLength()
	v572.SetValue(-1).SetValues([]int32{-1})
	v573 := v572.Increment()
	v573.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v573.Validate())
	v574 := v572.Decrement()
	v574.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v574.Validate())
	assert.NotNil(t, v572.Validate())
	v575 := v571.Contents()
	v575.SetValue(-1).SetValues([]int64{-1})
	v576 := v575.Increment()
	v576.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v576.Validate())
	v577 := v575.Decrement()
	v577.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v577.Validate())
	assert.NotNil(t, v575.Validate())
	v578 := v571.NextExtensionHeader()
	v578.SetValue(-1).SetValues([]int32{-1})
	v579 := v578.Increment()
	v579.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v579.Validate())
	v580 := v578.Decrement()
	v580.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v580.Validate())
	assert.NotNil(t, v578.Validate())
	v571.Validate()
	v534.Validate()
	v581 := v270.Gtpv2()
	v582 := v581.Version()
	v582.SetValue(-1).SetValues([]int32{-1})
	v583 := v582.Increment()
	v583.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v583.Validate())
	v584 := v582.Decrement()
	v584.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v584.Validate())
	assert.NotNil(t, v582.Validate())
	v585 := v581.PiggybackingFlag()
	v585.SetValue(-1).SetValues([]int32{-1})
	v586 := v585.Increment()
	v586.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v586.Validate())
	v587 := v585.Decrement()
	v587.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v587.Validate())
	assert.NotNil(t, v585.Validate())
	v588 := v581.TeidFlag()
	v588.SetValue(-1).SetValues([]int32{-1})
	v589 := v588.Increment()
	v589.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v589.Validate())
	v590 := v588.Decrement()
	v590.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v590.Validate())
	assert.NotNil(t, v588.Validate())
	v591 := v581.Spare1()
	v591.SetValue(-1).SetValues([]int32{-1})
	v592 := v591.Increment()
	v592.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v592.Validate())
	v593 := v591.Decrement()
	v593.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v593.Validate())
	assert.NotNil(t, v591.Validate())
	v594 := v581.MessageType()
	v594.SetValue(-1).SetValues([]int32{-1})
	v595 := v594.Increment()
	v595.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v595.Validate())
	v596 := v594.Decrement()
	v596.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v596.Validate())
	assert.NotNil(t, v594.Validate())
	v597 := v581.MessageLength()
	v597.SetValue(-1).SetValues([]int32{-1})
	v598 := v597.Increment()
	v598.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v598.Validate())
	v599 := v597.Decrement()
	v599.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v599.Validate())
	assert.NotNil(t, v597.Validate())
	v600 := v581.Teid()
	v600.SetValue(-1).SetValues([]int64{-1})
	v601 := v600.Increment()
	v601.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v601.Validate())
	v602 := v600.Decrement()
	v602.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v602.Validate())
	assert.NotNil(t, v600.Validate())
	v603 := v581.SequenceNumber()
	v603.SetValue(-1).SetValues([]int32{-1})
	v604 := v603.Increment()
	v604.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v604.Validate())
	v605 := v603.Decrement()
	v605.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v605.Validate())
	assert.NotNil(t, v603.Validate())
	v606 := v581.Spare2()
	v606.SetValue(-1).SetValues([]int32{-1})
	v607 := v606.Increment()
	v607.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v607.Validate())
	v608 := v606.Decrement()
	v608.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v608.Validate())
	assert.NotNil(t, v606.Validate())
	v581.Validate()
	v609 := v270.Arp()
	v610 := v609.HardwareType()
	v610.SetValue(-1).SetValues([]int32{-1})
	v611 := v610.Increment()
	v611.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v611.Validate())
	v612 := v610.Decrement()
	v612.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v612.Validate())
	assert.NotNil(t, v610.Validate())
	v613 := v609.ProtocolType()
	v613.SetValue(-1).SetValues([]int32{-1})
	v614 := v613.Increment()
	v614.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v614.Validate())
	v615 := v613.Decrement()
	v615.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v615.Validate())
	assert.NotNil(t, v613.Validate())
	v616 := v609.HardwareLength()
	v616.SetValue(-1).SetValues([]int32{-1})
	v617 := v616.Increment()
	v617.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v617.Validate())
	v618 := v616.Decrement()
	v618.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v618.Validate())
	assert.NotNil(t, v616.Validate())
	v619 := v609.ProtocolLength()
	v619.SetValue(-1).SetValues([]int32{-1})
	v620 := v619.Increment()
	v620.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v620.Validate())
	v621 := v619.Decrement()
	v621.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v621.Validate())
	assert.NotNil(t, v619.Validate())
	v622 := v609.Operation()
	v622.SetValue(-1).SetValues([]int32{-1})
	v623 := v622.Increment()
	v623.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v623.Validate())
	v624 := v622.Decrement()
	v624.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v624.Validate())
	assert.NotNil(t, v622.Validate())
	v625 := v609.SenderHardwareAddr()
	v625.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v626 := v625.Increment()
	v626.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v626.Validate())
	v627 := v625.Decrement()
	v627.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v627.Validate())
	assert.NotNil(t, v625.Validate())
	v628 := v609.SenderProtocolAddr()
	v628.SetValue("1.1.1.1.1").SetValues([]string{"1.1.1.1.1"})
	v629 := v628.Increment()
	v629.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v629.Validate())
	v630 := v628.Decrement()
	v630.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v630.Validate())
	assert.NotNil(t, v628.Validate())
	v631 := v609.TargetHardwareAddr()
	v631.SetValue("00:00:00:00:00:0a::0b").SetValues([]string{"00:00:00:00:00:0a::b"})
	v632 := v631.Increment()
	v632.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v632.Validate())
	v633 := v631.Decrement()
	v633.SetStart("00:00:00:00:00:0a::0b").SetStep("00:00:00:00:00:0a::0b")
	assert.NotNil(t, v633.Validate())
	assert.NotNil(t, v631.Validate())
	v634 := v609.TargetProtocolAddr()
	v634.SetValue("1.1.1.1.1").SetValues([]string{"1.1.1.1.1"})
	v635 := v634.Increment()
	v635.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v635.Validate())
	v636 := v634.Decrement()
	v636.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v636.Validate())
	assert.NotNil(t, v634.Validate())
	v609.Validate()
	v637 := v270.Icmp()
	v638 := v637.Echo()
	v639 := v638.Type()
	v639.SetValue(-1).SetValues([]int32{-1})
	v640 := v639.Increment()
	v640.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v640.Validate())
	v641 := v639.Decrement()
	v641.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v641.Validate())
	assert.NotNil(t, v639.Validate())
	v642 := v638.Code()
	v642.SetValue(-1).SetValues([]int32{-1})
	v643 := v642.Increment()
	v643.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v643.Validate())
	v644 := v642.Decrement()
	v644.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v644.Validate())
	assert.NotNil(t, v642.Validate())
	v645 := v638.Checksum()
	v645.SetCustom(-1)
	assert.NotNil(t, v645.Validate())
	v646 := v638.Identifier()
	v646.SetValue(-1).SetValues([]int32{-1})
	v647 := v646.Increment()
	v647.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v647.Validate())
	v648 := v646.Decrement()
	v648.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v648.Validate())
	assert.NotNil(t, v646.Validate())
	v649 := v638.SequenceNumber()
	v649.SetValue(-1).SetValues([]int32{-1})
	v650 := v649.Increment()
	v650.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v650.Validate())
	v651 := v649.Decrement()
	v651.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v651.Validate())
	assert.NotNil(t, v649.Validate())
	v638.Validate()
	v637.Validate()
	v652 := v270.Icmpv6()
	v653 := v652.Echo()
	v654 := v653.Type()
	v654.SetValue(-1).SetValues([]int32{-1})
	v655 := v654.Increment()
	v655.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v655.Validate())
	v656 := v654.Decrement()
	v656.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v656.Validate())
	assert.NotNil(t, v654.Validate())
	v657 := v653.Code()
	v657.SetValue(-1).SetValues([]int32{-1})
	v658 := v657.Increment()
	v658.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v658.Validate())
	v659 := v657.Decrement()
	v659.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v659.Validate())
	assert.NotNil(t, v657.Validate())
	v660 := v653.Identifier()
	v660.SetValue(-1).SetValues([]int32{-1})
	v661 := v660.Increment()
	v661.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v661.Validate())
	v662 := v660.Decrement()
	v662.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v662.Validate())
	assert.NotNil(t, v660.Validate())
	v663 := v653.SequenceNumber()
	v663.SetValue(-1).SetValues([]int32{-1})
	v664 := v663.Increment()
	v664.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v664.Validate())
	v665 := v663.Decrement()
	v665.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v665.Validate())
	assert.NotNil(t, v663.Validate())
	v666 := v653.Checksum()
	v666.SetCustom(-1)
	assert.NotNil(t, v666.Validate())
	v653.Validate()
	v652.Validate()
	v667 := v270.Ppp()
	v668 := v667.Address()
	v668.SetValue(-1).SetValues([]int32{-1})
	v669 := v668.Increment()
	v669.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v669.Validate())
	v670 := v668.Decrement()
	v670.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v670.Validate())
	assert.NotNil(t, v668.Validate())
	v671 := v667.Control()
	v671.SetValue(-1).SetValues([]int32{-1})
	v672 := v671.Increment()
	v672.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v672.Validate())
	v673 := v671.Decrement()
	v673.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v673.Validate())
	assert.NotNil(t, v671.Validate())
	v674 := v667.ProtocolType()
	v674.SetValue(-1).SetValues([]int32{-1})
	v675 := v674.Increment()
	v675.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v675.Validate())
	v676 := v674.Decrement()
	v676.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v676.Validate())
	assert.NotNil(t, v674.Validate())
	v667.Validate()
	v677 := v270.Igmpv1()
	v678 := v677.Version()
	v678.SetValue(-1).SetValues([]int32{-1})
	v679 := v678.Increment()
	v679.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v679.Validate())
	v680 := v678.Decrement()
	v680.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v680.Validate())
	assert.NotNil(t, v678.Validate())
	v681 := v677.Type()
	v681.SetValue(-1).SetValues([]int32{-1})
	v682 := v681.Increment()
	v682.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v682.Validate())
	v683 := v681.Decrement()
	v683.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v683.Validate())
	assert.NotNil(t, v681.Validate())
	v684 := v677.Unused()
	v684.SetValue(-1).SetValues([]int32{-1})
	v685 := v684.Increment()
	v685.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v685.Validate())
	v686 := v684.Decrement()
	v686.SetStart(-1).SetStep(-1)
	assert.NotNil(t, v686.Validate())
	assert.NotNil(t, v684.Validate())
	v687 := v677.Checksum()
	v687.SetCustom(-1)
	assert.NotNil(t, v687.Validate())
	v688 := v677.GroupAddress()
	v688.SetValue("1.1.1.1.1").SetValues([]string{"1.1.1.1.1"})
	v689 := v688.Increment()
	v689.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v689.Validate())
	v690 := v688.Decrement()
	v690.SetStart("1.1.1.1.1").SetStep("1.1.1.1.1")
	assert.NotNil(t, v690.Validate())
	assert.NotNil(t, v688.Validate())
	v677.Validate()
	v270.Validate()
	v691 := v266.Size()
	v692 := v691.Increment()
	v692.SetStart(-1).SetEnd(63)
	assert.NotNil(t, v692.Validate())
	v693 := v691.Random()
	v693.Validate()
	v691.Validate()
	v694 := v266.Rate()
	v694.SetPps(-1).SetBps(671).SetKbps(-1).SetMbps(-1).SetGbps(-1).SetPercentage(-1)
	assert.NotNil(t, v694.Validate())
	v695 := v266.Duration()
	v696 := v695.FixedPackets()
	v696.SetPackets(-1).SetGap(-1)
	v697 := v696.Delay()
	v697.SetBytes(-1).SetNanoseconds(-1).SetMicroseconds(-1)
	assert.NotNil(t, v697.Validate())
	assert.NotNil(t, v696.Validate())
	v698 := v695.FixedSeconds()
	v698.SetSeconds(-1).SetGap(-1)
	v699 := v698.Delay()
	v699.SetBytes(-1).SetNanoseconds(-1).SetMicroseconds(-1)
	assert.NotNil(t, v699.Validate())
	assert.NotNil(t, v698.Validate())
	v700 := v695.Burst()
	v700.SetBursts(-1).SetPackets(-1).SetGap(-1)
	v701 := v700.InterBurstGap()
	v701.SetBytes(-1).SetNanoseconds(-1).SetMicroseconds(-1)
	assert.NotNil(t, v701.Validate())
	assert.NotNil(t, v700.Validate())
	v702 := v695.Continuous()
	v702.SetGap(-1)
	v703 := v702.Delay()
	v703.SetBytes(-1).SetNanoseconds(-1).SetMicroseconds(-1)
	assert.NotNil(t, v703.Validate())
	assert.NotNil(t, v702.Validate())
	v695.Validate()
	v704 := v266.Metrics()
	v705 := v704.Latency()
	v705.Validate()
	v704.Validate()
	v266.Validate()
	v706 := config.Events()
	v707 := v706.Link()
	v707.Validate()
	v708 := v706.RxRateThreshold()
	v708.SetThreshold(-1)
	assert.NotNil(t, v708.Validate())
	v709 := v706.RouteAdvertiseWithdraw()
	v709.Validate()
	v706.Validate()
	v710 := config.Options()
	v711 := v710.PortOptions()
	v711.Validate()
	v710.Validate()

}
